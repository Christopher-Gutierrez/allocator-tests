==3936== Memcheck, a memory error detector
==3936== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3936== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==3936== Command: ./TestAllocator
==3936== 
Running main() from gtest_main.cc
[==========] Running 35 tests from 12 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (18 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (6 ms)
[----------] 2 tests from TestAllocator1/0 (42 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (7 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (6 ms)
[----------] 2 tests from TestAllocator1/1 (14 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (14 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (5 ms)
[----------] 2 tests from TestAllocator1/2 (21 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (12 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (5 ms)
[----------] 2 tests from TestAllocator1/3 (20 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (5 ms)
[----------] 2 tests from TestAllocator2 (11 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (4 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (5 ms)
[----------] 2 tests from TestAllocator3/0 (11 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (4 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator3/1 (11 ms total)

[----------] 4 tests from TestAllocator4/0, where TypeParam = my_allocator<char, 90ul>
[ RUN      ] TestAllocator4/0.test_1
[       OK ] TestAllocator4/0.test_1 (14 ms)
[ RUN      ] TestAllocator4/0.test_2
[       OK ] TestAllocator4/0.test_2 (48 ms)
[ RUN      ] TestAllocator4/0.test_3
[       OK ] TestAllocator4/0.test_3 (11 ms)
[ RUN      ] TestAllocator4/0.test_4
[       OK ] TestAllocator4/0.test_4 (9 ms)
[----------] 4 tests from TestAllocator4/0 (89 ms total)

[----------] 4 tests from TestAllocator4/1, where TypeParam = my_allocator<int, 120ul>
[ RUN      ] TestAllocator4/1.test_1
[       OK ] TestAllocator4/1.test_1 (18 ms)
[ RUN      ] TestAllocator4/1.test_2
[       OK ] TestAllocator4/1.test_2 (3 ms)
[ RUN      ] TestAllocator4/1.test_3
[       OK ] TestAllocator4/1.test_3 (12 ms)
[ RUN      ] TestAllocator4/1.test_4
[       OK ] TestAllocator4/1.test_4 (6 ms)
[----------] 4 tests from TestAllocator4/1 (45 ms total)

[----------] 5 tests from TestAllocator5
[ RUN      ] TestAllocator5.test_1
[       OK ] TestAllocator5.test_1 (4 ms)
[ RUN      ] TestAllocator5.test_2
[       OK ] TestAllocator5.test_2 (10 ms)
[ RUN      ] TestAllocator5.valid_1
[       OK ] TestAllocator5.valid_1 (2 ms)
[ RUN      ] TestAllocator5.valid_2
[       OK ] TestAllocator5.valid_2 (2 ms)
[ RUN      ] TestAllocator5.valid_3
[       OK ] TestAllocator5.valid_3 (3 ms)
[----------] 5 tests from TestAllocator5 (28 ms total)

[----------] 4 tests from TestAllocator6/0, where TypeParam = my_allocator<int, 1921ul>
[ RUN      ] TestAllocator6/0.test_1
[       OK ] TestAllocator6/0.test_1 (10 ms)
[ RUN      ] TestAllocator6/0.test_2
[       OK ] TestAllocator6/0.test_2 (8 ms)
[ RUN      ] TestAllocator6/0.test_3
[       OK ] TestAllocator6/0.test_3 (4 ms)
[ RUN      ] TestAllocator6/0.test_4
[       OK ] TestAllocator6/0.test_4 (4 ms)
[----------] 4 tests from TestAllocator6/0 (33 ms total)

[----------] 4 tests from TestAllocator6/1, where TypeParam = my_allocator<double, 3817ul>
[ RUN      ] TestAllocator6/1.test_1
[       OK ] TestAllocator6/1.test_1 (12 ms)
[ RUN      ] TestAllocator6/1.test_2
[       OK ] TestAllocator6/1.test_2 (9 ms)
[ RUN      ] TestAllocator6/1.test_3
[       OK ] TestAllocator6/1.test_3 (7 ms)
[ RUN      ] TestAllocator6/1.test_4
[       OK ] TestAllocator6/1.test_4 (4 ms)
[----------] 4 tests from TestAllocator6/1 (39 ms total)

[----------] Global test environment tear-down
[==========] 35 tests from 12 test cases ran. (439 ms total)
[  PASSED  ] 35 tests.
==3936== 
==3936== HEAP SUMMARY:
==3936==     in use at exit: 72,704 bytes in 1 blocks
==3936==   total heap usage: 1,110 allocs, 1,109 frees, 235,914 bytes allocated
==3936== 
==3936== LEAK SUMMARY:
==3936==    definitely lost: 0 bytes in 0 blocks
==3936==    indirectly lost: 0 bytes in 0 blocks
==3936==      possibly lost: 0 bytes in 0 blocks
==3936==    still reachable: 72,704 bytes in 1 blocks
==3936==         suppressed: 0 bytes in 0 blocks
==3936== Rerun with --leak-check=full to see details of leaked memory
==3936== 
==3936== For counts of detected and suppressed errors, rerun with: -v
==3936== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:90.13% of 223
Branches executed:78.23% of 790
Taken at least once:41.90% of 790
Calls executed:63.32% of 747
Creating 'TestAllocator.c++.gcov'
