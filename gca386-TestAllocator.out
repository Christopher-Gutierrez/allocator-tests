==810== Memcheck, a memory error detector
==810== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==810== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==810== Command: ./TestAllocator
==810== 
Running main() from gtest_main.cc
[==========] Running 34 tests from 11 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (12 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/0 (30 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/1 (11 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (7 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (13 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (8 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/3 (13 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (1 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (2 ms)
[----------] 2 tests from TestAllocator2 (6 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (7 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (3 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (2 ms)
[----------] 2 tests from TestAllocator3/1 (7 ms total)

[----------] 3 tests from TestAllocator4
[ RUN      ] TestAllocator4.test_1
[       OK ] TestAllocator4.test_1 (4 ms)
[ RUN      ] TestAllocator4.test_2
[       OK ] TestAllocator4.test_2 (3 ms)
[ RUN      ] TestAllocator4.test_3
[       OK ] TestAllocator4.test_3 (4 ms)
[----------] 3 tests from TestAllocator4 (13 ms total)

[----------] 7 tests from TestAllocator5/0, where TypeParam = my_allocator<int, 200ul>
[ RUN      ] TestAllocator5/0.test_1
[       OK ] TestAllocator5/0.test_1 (2 ms)
[ RUN      ] TestAllocator5/0.test_2
[       OK ] TestAllocator5/0.test_2 (32 ms)
[ RUN      ] TestAllocator5/0.test_3
[       OK ] TestAllocator5/0.test_3 (1 ms)
[ RUN      ] TestAllocator5/0.test_4
[       OK ] TestAllocator5/0.test_4 (1 ms)
[ RUN      ] TestAllocator5/0.test_5
[       OK ] TestAllocator5/0.test_5 (2 ms)
[ RUN      ] TestAllocator5/0.test_6
[       OK ] TestAllocator5/0.test_6 (2 ms)
[ RUN      ] TestAllocator5/0.test_7
[       OK ] TestAllocator5/0.test_7 (5 ms)
[----------] 7 tests from TestAllocator5/0 (56 ms total)

[----------] 7 tests from TestAllocator5/1, where TypeParam = my_allocator<double, 200ul>
[ RUN      ] TestAllocator5/1.test_1
[       OK ] TestAllocator5/1.test_1 (4 ms)
[ RUN      ] TestAllocator5/1.test_2
[       OK ] TestAllocator5/1.test_2 (3 ms)
[ RUN      ] TestAllocator5/1.test_3
[       OK ] TestAllocator5/1.test_3 (1 ms)
[ RUN      ] TestAllocator5/1.test_4
[       OK ] TestAllocator5/1.test_4 (3 ms)
[ RUN      ] TestAllocator5/1.test_5
[       OK ] TestAllocator5/1.test_5 (2 ms)
[ RUN      ] TestAllocator5/1.test_6
[       OK ] TestAllocator5/1.test_6 (2 ms)
[ RUN      ] TestAllocator5/1.test_7
[       OK ] TestAllocator5/1.test_7 (2 ms)
[----------] 7 tests from TestAllocator5/1 (26 ms total)

[----------] 3 tests from TestAllocator6
[ RUN      ] TestAllocator6.test_1
[       OK ] TestAllocator6.test_1 (3 ms)
[ RUN      ] TestAllocator6.test_2
[       OK ] TestAllocator6.test_2 (2 ms)
[ RUN      ] TestAllocator6.test_3
[       OK ] TestAllocator6.test_3 (1 ms)
[----------] 3 tests from TestAllocator6 (9 ms total)

[----------] Global test environment tear-down
[==========] 34 tests from 11 test cases ran. (241 ms total)
[  PASSED  ] 34 tests.
==810== 
==810== HEAP SUMMARY:
==810==     in use at exit: 72,704 bytes in 1 blocks
==810==   total heap usage: 1,040 allocs, 1,039 frees, 228,119 bytes allocated
==810== 
==810== LEAK SUMMARY:
==810==    definitely lost: 0 bytes in 0 blocks
==810==    indirectly lost: 0 bytes in 0 blocks
==810==      possibly lost: 0 bytes in 0 blocks
==810==    still reachable: 72,704 bytes in 1 blocks
==810==         suppressed: 0 bytes in 0 blocks
==810== Rerun with --leak-check=full to see details of leaked memory
==810== 
==810== For counts of detected and suppressed errors, rerun with: -v
==810== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:90.91% of 154
Branches executed:68.98% of 722
Taken at least once:36.15% of 722
Calls executed:57.02% of 712
Creating 'TestAllocator.c++.gcov'
