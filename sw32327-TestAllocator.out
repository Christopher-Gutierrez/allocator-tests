==66== Memcheck, a memory error detector
==66== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==66== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==66== Command: ./TestAllocator
==66== 
Running main() from gtest_main.cc
[==========] Running 49 tests from 19 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from construct_test
[ RUN      ] construct_test.construct_1
[       OK ] construct_test.construct_1 (40 ms)
[ RUN      ] construct_test.construct_2
[       OK ] construct_test.construct_2 (4 ms)
[----------] 2 tests from construct_test (54 ms total)

[----------] 2 tests from allocate_test/0, where TypeParam = my_allocator<char, 900ul>
[ RUN      ] allocate_test/0.allocate_1
[       OK ] allocate_test/0.allocate_1 (12 ms)
[ RUN      ] allocate_test/0.allocate_2
[       OK ] allocate_test/0.allocate_2 (2 ms)
[----------] 2 tests from allocate_test/0 (14 ms total)

[----------] 2 tests from allocate_test/1, where TypeParam = my_allocator<int, 1200ul>
[ RUN      ] allocate_test/1.allocate_1
[       OK ] allocate_test/1.allocate_1 (12 ms)
[ RUN      ] allocate_test/1.allocate_2
[       OK ] allocate_test/1.allocate_2 (1 ms)
[----------] 2 tests from allocate_test/1 (14 ms total)

[----------] 2 tests from allocate_test/2, where TypeParam = my_allocator<double, 1600ul>
[ RUN      ] allocate_test/2.allocate_1
[       OK ] allocate_test/2.allocate_1 (12 ms)
[ RUN      ] allocate_test/2.allocate_2
[       OK ] allocate_test/2.allocate_2 (2 ms)
[----------] 2 tests from allocate_test/2 (14 ms total)

[----------] 3 tests from allocate_test
[ RUN      ] allocate_test.allocate_3
[       OK ] allocate_test.allocate_3 (9 ms)
[ RUN      ] allocate_test.allocate_4
[       OK ] allocate_test.allocate_4 (5 ms)
[ RUN      ] allocate_test.allocate_5
[       OK ] allocate_test.allocate_5 (7 ms)
[----------] 3 tests from allocate_test (22 ms total)

[----------] 5 tests from deallocate_test/0, where TypeParam = my_allocator<char, 10000ul>
[ RUN      ] deallocate_test/0.deallocate_1
[       OK ] deallocate_test/0.deallocate_1 (14 ms)
[ RUN      ] deallocate_test/0.deallocate_2
[       OK ] deallocate_test/0.deallocate_2 (2 ms)
[ RUN      ] deallocate_test/0.deallocate_3
[       OK ] deallocate_test/0.deallocate_3 (4 ms)
[ RUN      ] deallocate_test/0.deallocate_4
[       OK ] deallocate_test/0.deallocate_4 (3 ms)
[ RUN      ] deallocate_test/0.deallocate_5
[       OK ] deallocate_test/0.deallocate_5 (5 ms)
[----------] 5 tests from deallocate_test/0 (28 ms total)

[----------] 5 tests from deallocate_test/1, where TypeParam = my_allocator<int, 10000ul>
[ RUN      ] deallocate_test/1.deallocate_1
[       OK ] deallocate_test/1.deallocate_1 (12 ms)
[ RUN      ] deallocate_test/1.deallocate_2
[       OK ] deallocate_test/1.deallocate_2 (2 ms)
[ RUN      ] deallocate_test/1.deallocate_3
[       OK ] deallocate_test/1.deallocate_3 (4 ms)
[ RUN      ] deallocate_test/1.deallocate_4
[       OK ] deallocate_test/1.deallocate_4 (2 ms)
[ RUN      ] deallocate_test/1.deallocate_5
[       OK ] deallocate_test/1.deallocate_5 (3 ms)
[----------] 5 tests from deallocate_test/1 (24 ms total)

[----------] 5 tests from deallocate_test/2, where TypeParam = my_allocator<double, 10000ul>
[ RUN      ] deallocate_test/2.deallocate_1
[       OK ] deallocate_test/2.deallocate_1 (13 ms)
[ RUN      ] deallocate_test/2.deallocate_2
[       OK ] deallocate_test/2.deallocate_2 (3 ms)
[ RUN      ] deallocate_test/2.deallocate_3
[       OK ] deallocate_test/2.deallocate_3 (3 ms)
[ RUN      ] deallocate_test/2.deallocate_4
[       OK ] deallocate_test/2.deallocate_4 (2 ms)
[ RUN      ] deallocate_test/2.deallocate_5
[       OK ] deallocate_test/2.deallocate_5 (3 ms)
[----------] 5 tests from deallocate_test/2 (25 ms total)

[----------] 3 tests from valid_test
[ RUN      ] valid_test.valid_1
[       OK ] valid_test.valid_1 (6 ms)
[ RUN      ] valid_test.valid_2
[       OK ] valid_test.valid_2 (2 ms)
[ RUN      ] valid_test.valid_3
[       OK ] valid_test.valid_3 (2 ms)
[----------] 3 tests from valid_test (11 ms total)

[----------] 3 tests from next_test
[ RUN      ] next_test.next_1
[       OK ] next_test.next_1 (7 ms)
[ RUN      ] next_test.next_2
[       OK ] next_test.next_2 (2 ms)
[ RUN      ] next_test.next_3
[       OK ] next_test.next_3 (2 ms)
[----------] 3 tests from next_test (13 ms total)

[----------] 2 tests from prev_test
[ RUN      ] prev_test.prev_1
[       OK ] prev_test.prev_1 (2 ms)
[ RUN      ] prev_test.prev_2
[       OK ] prev_test.prev_2 (2 ms)
[----------] 2 tests from prev_test (4 ms total)

[----------] 1 test from set_header_test
[ RUN      ] set_header_test.set_header_1
[       OK ] set_header_test.set_header_1 (4 ms)
[----------] 1 test from set_header_test (4 ms total)

[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (3 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/0 (8 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/1 (9 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (8 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (11 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (8 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/3 (12 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (2 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (2 ms)
[----------] 2 tests from TestAllocator2 (4 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (6 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (3 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (6 ms total)

[----------] Global test environment tear-down
[==========] 49 tests from 19 test cases ran. (329 ms total)
[  PASSED  ] 49 tests.
==66== 
==66== HEAP SUMMARY:
==66==     in use at exit: 72,704 bytes in 1 blocks
==66==   total heap usage: 1,319 allocs, 1,318 frees, 281,665 bytes allocated
==66== 
==66== LEAK SUMMARY:
==66==    definitely lost: 0 bytes in 0 blocks
==66==    indirectly lost: 0 bytes in 0 blocks
==66==      possibly lost: 0 bytes in 0 blocks
==66==    still reachable: 72,704 bytes in 1 blocks
==66==         suppressed: 0 bytes in 0 blocks
==66== Rerun with --leak-check=full to see details of leaked memory
==66== 
==66== For counts of detected and suppressed errors, rerun with: -v
==66== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Allocator.h'
Lines executed:98.65% of 74
Branches executed:92.88% of 618
Taken at least once:61.81% of 618
Calls executed:62.62% of 503
Creating 'Allocator.h.gcov'
File 'TestAllocator.c++'
Lines executed:89.27% of 205
Branches executed:62.42% of 1272
Taken at least once:32.70% of 1272
Calls executed:50.81% of 1295
Creating 'TestAllocator.c++.gcov'