==12467== Memcheck, a memory error detector
==12467== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==12467== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==12467== Command: ./TestAllocator
==12467== 
Running main() from gtest_main.cc
[==========] Running 65 tests from 13 test cases.
[----------] Global test environment set-up.
[----------] 5 tests from TestAllocator1a/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1a/0.test_1a
[       OK ] TestAllocator1a/0.test_1a (39 ms)
[ RUN      ] TestAllocator1a/0.test1b
[       OK ] TestAllocator1a/0.test1b (3 ms)
[ RUN      ] TestAllocator1a/0.test1c
[       OK ] TestAllocator1a/0.test1c (1 ms)
[ RUN      ] TestAllocator1a/0.test1d
[       OK ] TestAllocator1a/0.test1d (2 ms)
[ RUN      ] TestAllocator1a/0.test1e
[       OK ] TestAllocator1a/0.test1e (2 ms)
[----------] 5 tests from TestAllocator1a/0 (54 ms total)

[----------] 5 tests from TestAllocator1a/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1a/1.test_1a
[       OK ] TestAllocator1a/1.test_1a (3 ms)
[ RUN      ] TestAllocator1a/1.test1b
[       OK ] TestAllocator1a/1.test1b (2 ms)
[ RUN      ] TestAllocator1a/1.test1c
[       OK ] TestAllocator1a/1.test1c (1 ms)
[ RUN      ] TestAllocator1a/1.test1d
[       OK ] TestAllocator1a/1.test1d (1 ms)
[ RUN      ] TestAllocator1a/1.test1e
[       OK ] TestAllocator1a/1.test1e (2 ms)
[----------] 5 tests from TestAllocator1a/1 (10 ms total)

[----------] 5 tests from TestAllocator1a/2, where TypeParam = std::allocator<char>
[ RUN      ] TestAllocator1a/2.test_1a
[       OK ] TestAllocator1a/2.test_1a (3 ms)
[ RUN      ] TestAllocator1a/2.test1b
[       OK ] TestAllocator1a/2.test1b (1 ms)
[ RUN      ] TestAllocator1a/2.test1c
[       OK ] TestAllocator1a/2.test1c (1 ms)
[ RUN      ] TestAllocator1a/2.test1d
[       OK ] TestAllocator1a/2.test1d (1 ms)
[ RUN      ] TestAllocator1a/2.test1e
[       OK ] TestAllocator1a/2.test1e (2 ms)
[----------] 5 tests from TestAllocator1a/2 (9 ms total)

[----------] 5 tests from TestAllocator1a/3, where TypeParam = Allocator<int, 100ul>
[ RUN      ] TestAllocator1a/3.test_1a
[       OK ] TestAllocator1a/3.test_1a (2 ms)
[ RUN      ] TestAllocator1a/3.test1b
[       OK ] TestAllocator1a/3.test1b (4 ms)
[ RUN      ] TestAllocator1a/3.test1c
[       OK ] TestAllocator1a/3.test1c (2 ms)
[ RUN      ] TestAllocator1a/3.test1d
[       OK ] TestAllocator1a/3.test1d (4 ms)
[ RUN      ] TestAllocator1a/3.test1e
[       OK ] TestAllocator1a/3.test1e (6 ms)
[----------] 5 tests from TestAllocator1a/3 (19 ms total)

[----------] 5 tests from TestAllocator1a/4, where TypeParam = Allocator<double, 100ul>
[ RUN      ] TestAllocator1a/4.test_1a
[       OK ] TestAllocator1a/4.test_1a (3 ms)
[ RUN      ] TestAllocator1a/4.test1b
[       OK ] TestAllocator1a/4.test1b (4 ms)
[ RUN      ] TestAllocator1a/4.test1c
[       OK ] TestAllocator1a/4.test1c (2 ms)
[ RUN      ] TestAllocator1a/4.test1d
[       OK ] TestAllocator1a/4.test1d (3 ms)
[ RUN      ] TestAllocator1a/4.test1e
[       OK ] TestAllocator1a/4.test1e (6 ms)
[----------] 5 tests from TestAllocator1a/4 (18 ms total)

[----------] 5 tests from TestAllocator1a/5, where TypeParam = Allocator<char, 100ul>
[ RUN      ] TestAllocator1a/5.test_1a
[       OK ] TestAllocator1a/5.test_1a (2 ms)
[ RUN      ] TestAllocator1a/5.test1b
[       OK ] TestAllocator1a/5.test1b (4 ms)
[ RUN      ] TestAllocator1a/5.test1c
[       OK ] TestAllocator1a/5.test1c (2 ms)
[ RUN      ] TestAllocator1a/5.test1d
[       OK ] TestAllocator1a/5.test1d (3 ms)
[ RUN      ] TestAllocator1a/5.test1e
[       OK ] TestAllocator1a/5.test1e (7 ms)
[----------] 5 tests from TestAllocator1a/5 (18 ms total)

[----------] 7 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (4 ms)
[ RUN      ] TestAllocator1/0.test_my_1a
[       OK ] TestAllocator1/0.test_my_1a (2 ms)
[ RUN      ] TestAllocator1/0.test_my_1b
[       OK ] TestAllocator1/0.test_my_1b (2 ms)
[ RUN      ] TestAllocator1/0.test_my_1c
[       OK ] TestAllocator1/0.test_my_1c (2 ms)
[ RUN      ] TestAllocator1/0.test_my_1d
[       OK ] TestAllocator1/0.test_my_1d (2 ms)
[ RUN      ] TestAllocator1/0.test_my_1e
[       OK ] TestAllocator1/0.test_my_1e (3 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (4 ms)
[----------] 7 tests from TestAllocator1/0 (20 ms total)

[----------] 7 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (4 ms)
[ RUN      ] TestAllocator1/1.test_my_1a
[       OK ] TestAllocator1/1.test_my_1a (3 ms)
[ RUN      ] TestAllocator1/1.test_my_1b
[       OK ] TestAllocator1/1.test_my_1b (1 ms)
[ RUN      ] TestAllocator1/1.test_my_1c
[       OK ] TestAllocator1/1.test_my_1c (2 ms)
[ RUN      ] TestAllocator1/1.test_my_1d
[       OK ] TestAllocator1/1.test_my_1d (2 ms)
[ RUN      ] TestAllocator1/1.test_my_1e
[       OK ] TestAllocator1/1.test_my_1e (3 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 7 tests from TestAllocator1/1 (20 ms total)

[----------] 7 tests from TestAllocator1/2, where TypeParam = Allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (4 ms)
[ RUN      ] TestAllocator1/2.test_my_1a
[       OK ] TestAllocator1/2.test_my_1a (2 ms)
[ RUN      ] TestAllocator1/2.test_my_1b
[       OK ] TestAllocator1/2.test_my_1b (2 ms)
[ RUN      ] TestAllocator1/2.test_my_1c
[       OK ] TestAllocator1/2.test_my_1c (2 ms)
[ RUN      ] TestAllocator1/2.test_my_1d
[       OK ] TestAllocator1/2.test_my_1d (3 ms)
[ RUN      ] TestAllocator1/2.test_my_1e
[       OK ] TestAllocator1/2.test_my_1e (3 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 7 tests from TestAllocator1/2 (19 ms total)

[----------] 7 tests from TestAllocator1/3, where TypeParam = Allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (3 ms)
[ RUN      ] TestAllocator1/3.test_my_1a
[       OK ] TestAllocator1/3.test_my_1a (2 ms)
[ RUN      ] TestAllocator1/3.test_my_1b
[       OK ] TestAllocator1/3.test_my_1b (1 ms)
[ RUN      ] TestAllocator1/3.test_my_1c
[       OK ] TestAllocator1/3.test_my_1c (3 ms)
[ RUN      ] TestAllocator1/3.test_my_1d
[       OK ] TestAllocator1/3.test_my_1d (2 ms)
[ RUN      ] TestAllocator1/3.test_my_1e
[       OK ] TestAllocator1/3.test_my_1e (4 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 7 tests from TestAllocator1/3 (19 ms total)

[----------] 3 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (6 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (5 ms)
[ RUN      ] TestAllocator2.valid
[       OK ] TestAllocator2.valid (5 ms)
[----------] 3 tests from TestAllocator2 (16 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = Allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (6 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = Allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (2 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (6 ms total)

[----------] Global test environment tear-down
[==========] 65 tests from 13 test cases ran. (259 ms total)
[  PASSED  ] 65 tests.
==12467== 
==12467== HEAP SUMMARY:
==12467==     in use at exit: 1,324 bytes in 10 blocks
==12467==   total heap usage: 2,275 allocs, 2,265 frees, 265,897 bytes allocated
==12467== 
==12467== LEAK SUMMARY:
==12467==    definitely lost: 1,324 bytes in 10 blocks
==12467==    indirectly lost: 0 bytes in 0 blocks
==12467==      possibly lost: 0 bytes in 0 blocks
==12467==    still reachable: 0 bytes in 0 blocks
==12467==         suppressed: 0 bytes in 0 blocks
==12467== Rerun with --leak-check=full to see details of leaked memory
==12467== 
==12467== For counts of detected and suppressed errors, rerun with: -v
==12467== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:96.41% of 195
Branches executed:48.96% of 1920
Taken at least once:25.10% of 1920
Calls executed:42.26% of 1841
Creating 'TestAllocator.c++.gcov'
