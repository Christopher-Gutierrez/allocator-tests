==478== Memcheck, a memory error detector
==478== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==478== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==478== Command: ./TestAllocator
==478== 
Running main() from gtest_main.cc
[==========] Running 22 tests from 10 test cases.
[----------] Global test environment set-up.
[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (15 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (5 ms)
[----------] 2 tests from TestAllocator1/0 (50 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (5 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/1 (10 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (8 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (12 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (8 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/3 (14 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (2 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (2 ms)
[----------] 2 tests from TestAllocator2 (5 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (7 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (4 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (7 ms total)

[----------] 1 test from TestAllocator4
[ RUN      ] TestAllocator4.size_enough
[       OK ] TestAllocator4.size_enough (38 ms)
[----------] 1 test from TestAllocator4 (39 ms total)

[----------] 4 tests from TestAllocator5
[ RUN      ] TestAllocator5.checksizeofn
[       OK ] TestAllocator5.checksizeofn (6 ms)
[ RUN      ] TestAllocator5.match
[       OK ] TestAllocator5.match (6 ms)
[ RUN      ] TestAllocator5.fill
[       OK ] TestAllocator5.fill (3 ms)
[ RUN      ] TestAllocator5.split
[       OK ] TestAllocator5.split (5 ms)
[----------] 4 tests from TestAllocator5 (21 ms total)

[----------] 3 tests from TestAllocator6/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator6/0.test_1
[       OK ] TestAllocator6/0.test_1 (8 ms)
[ RUN      ] TestAllocator6/0.test_2
[       OK ] TestAllocator6/0.test_2 (4 ms)
[ RUN      ] TestAllocator6/0.test_6
[       OK ] TestAllocator6/0.test_6 (2 ms)
[----------] 3 tests from TestAllocator6/0 (15 ms total)

[----------] Global test environment tear-down
[==========] 22 tests from 10 test cases ran. (233 ms total)
[  PASSED  ] 22 tests.
==478== 
==478== HEAP SUMMARY:
==478==     in use at exit: 72,704 bytes in 1 blocks
==478==   total heap usage: 731 allocs, 730 frees, 193,515 bytes allocated
==478== 
==478== LEAK SUMMARY:
==478==    definitely lost: 0 bytes in 0 blocks
==478==    indirectly lost: 0 bytes in 0 blocks
==478==      possibly lost: 0 bytes in 0 blocks
==478==    still reachable: 72,704 bytes in 1 blocks
==478==         suppressed: 0 bytes in 0 blocks
==478== Rerun with --leak-check=full to see details of leaked memory
==478== 
==478== For counts of detected and suppressed errors, rerun with: -v
==478== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:80.95% of 147
Branches executed:52.64% of 794
Taken at least once:27.83% of 794
Calls executed:42.76% of 746
Creating 'TestAllocator.c++.gcov'
