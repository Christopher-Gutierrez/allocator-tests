==23569== Memcheck, a memory error detector
==23569== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==23569== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==23569== Command: ./TestAllocator
==23569== 
Running main() from gtest_main.cc
[==========] Running 38 tests from 12 test cases.
[----------] Global test environment set-up.
[----------] 1 test from TestAllocatorStress1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocatorStress1/0.test_0
[       OK ] TestAllocatorStress1/0.test_0 (30 ms)
[----------] 1 test from TestAllocatorStress1/0 (36 ms total)

[----------] 1 test from TestAllocatorStress1/1, where TypeParam = my_allocator<int, 12000ul>
[ RUN      ] TestAllocatorStress1/1.test_0
[       OK ] TestAllocatorStress1/1.test_0 (847 ms)
[----------] 1 test from TestAllocatorStress1/1 (848 ms total)

[----------] 10 tests from TestAllocator0/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator0/0.test_0
[       OK ] TestAllocator0/0.test_0 (43 ms)
[ RUN      ] TestAllocator0/0.test_3
[       OK ] TestAllocator0/0.test_3 (21 ms)
[ RUN      ] TestAllocator0/0.test_4
[       OK ] TestAllocator0/0.test_4 (11 ms)
[ RUN      ] TestAllocator0/0.test_5
[       OK ] TestAllocator0/0.test_5 (5 ms)
[ RUN      ] TestAllocator0/0.test_6
[       OK ] TestAllocator0/0.test_6 (6 ms)
[ RUN      ] TestAllocator0/0.test_7
[       OK ] TestAllocator0/0.test_7 (3 ms)
[ RUN      ] TestAllocator0/0.test_8
[       OK ] TestAllocator0/0.test_8 (3 ms)
[ RUN      ] TestAllocator0/0.test_9
[       OK ] TestAllocator0/0.test_9 (2 ms)
[ RUN      ] TestAllocator0/0.test_10
[       OK ] TestAllocator0/0.test_10 (1 ms)
[ RUN      ] TestAllocator0/0.test_11
[       OK ] TestAllocator0/0.test_11 (2 ms)
[----------] 10 tests from TestAllocator0/0 (98 ms total)

[----------] 10 tests from TestAllocator0/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator0/1.test_0
[       OK ] TestAllocator0/1.test_0 (2 ms)
[ RUN      ] TestAllocator0/1.test_3
[       OK ] TestAllocator0/1.test_3 (2 ms)
[ RUN      ] TestAllocator0/1.test_4
[       OK ] TestAllocator0/1.test_4 (17 ms)
[ RUN      ] TestAllocator0/1.test_5
[       OK ] TestAllocator0/1.test_5 (3 ms)
[ RUN      ] TestAllocator0/1.test_6
[       OK ] TestAllocator0/1.test_6 (7 ms)
[ RUN      ] TestAllocator0/1.test_7
[       OK ] TestAllocator0/1.test_7 (3 ms)
[ RUN      ] TestAllocator0/1.test_8
[       OK ] TestAllocator0/1.test_8 (3 ms)
[ RUN      ] TestAllocator0/1.test_9
[       OK ] TestAllocator0/1.test_9 (1 ms)
[ RUN      ] TestAllocator0/1.test_10
[       OK ] TestAllocator0/1.test_10 (1 ms)
[ RUN      ] TestAllocator0/1.test_11
[       OK ] TestAllocator0/1.test_11 (2 ms)
[----------] 10 tests from TestAllocator0/1 (43 ms total)

[----------] 2 tests from TestAllocator0
[ RUN      ] TestAllocator0.test_1
[       OK ] TestAllocator0.test_1 (7 ms)
[ RUN      ] TestAllocator0.test_2
[       OK ] TestAllocator0.test_2 (7 ms)
[----------] 2 tests from TestAllocator0 (14 ms total)

[----------] 2 tests from TestAllocator1/0, where TypeParam = std::allocator<int>
[ RUN      ] TestAllocator1/0.test_1
[       OK ] TestAllocator1/0.test_1 (3 ms)
[ RUN      ] TestAllocator1/0.test_10
[       OK ] TestAllocator1/0.test_10 (4 ms)
[----------] 2 tests from TestAllocator1/0 (7 ms total)

[----------] 2 tests from TestAllocator1/1, where TypeParam = std::allocator<double>
[ RUN      ] TestAllocator1/1.test_1
[       OK ] TestAllocator1/1.test_1 (4 ms)
[ RUN      ] TestAllocator1/1.test_10
[       OK ] TestAllocator1/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/1 (8 ms total)

[----------] 2 tests from TestAllocator1/2, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator1/2.test_1
[       OK ] TestAllocator1/2.test_1 (3 ms)
[ RUN      ] TestAllocator1/2.test_10
[       OK ] TestAllocator1/2.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/2 (7 ms total)

[----------] 2 tests from TestAllocator1/3, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator1/3.test_1
[       OK ] TestAllocator1/3.test_1 (3 ms)
[ RUN      ] TestAllocator1/3.test_10
[       OK ] TestAllocator1/3.test_10 (3 ms)
[----------] 2 tests from TestAllocator1/3 (6 ms total)

[----------] 2 tests from TestAllocator2
[ RUN      ] TestAllocator2.const_index
[       OK ] TestAllocator2.const_index (3 ms)
[ RUN      ] TestAllocator2.index
[       OK ] TestAllocator2.index (2 ms)
[----------] 2 tests from TestAllocator2 (5 ms total)

[----------] 2 tests from TestAllocator3/0, where TypeParam = my_allocator<int, 100ul>
[ RUN      ] TestAllocator3/0.test_1
[       OK ] TestAllocator3/0.test_1 (3 ms)
[ RUN      ] TestAllocator3/0.test_10
[       OK ] TestAllocator3/0.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/0 (6 ms total)

[----------] 2 tests from TestAllocator3/1, where TypeParam = my_allocator<double, 100ul>
[ RUN      ] TestAllocator3/1.test_1
[       OK ] TestAllocator3/1.test_1 (3 ms)
[ RUN      ] TestAllocator3/1.test_10
[       OK ] TestAllocator3/1.test_10 (3 ms)
[----------] 2 tests from TestAllocator3/1 (6 ms total)

[----------] Global test environment tear-down
[==========] 38 tests from 12 test cases ran. (1112 ms total)
[  PASSED  ] 38 tests.
==23569== 
==23569== HEAP SUMMARY:
==23569==     in use at exit: 0 bytes in 0 blocks
==23569==   total heap usage: 3,558 allocs, 3,558 frees, 253,406 bytes allocated
==23569== 
==23569== All heap blocks were freed -- no leaks are possible
==23569== 
==23569== For counts of detected and suppressed errors, rerun with: -v
==23569== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'TestAllocator.c++'
Lines executed:91.49% of 188
Branches executed:63.43% of 1214
Taken at least once:33.03% of 1214
Calls executed:50.17% of 1176
Creating 'TestAllocator.c++.gcov'
